[package]
name = "py32-metapac"
version = "0.4.1"
edition = "2021"
license = "MIT OR Apache-2.0"
repository = "https://github.com/py32-rs/py32-data"
readme = "../../README.md"
description = "Peripheral Access Crate (PAC) for all PY32 chips, including metadata."

# `cargo publish` is unable to figure out which .rs files are needed due to the include! magic.
include = [
    "**/*.rs",
    "**/*.x",
    "Cargo.toml",
]

[package.metadata.docs.rs]
features = ["py32f072c1b", "pac", "metadata"]
default-target = "thumbv6m-none-eabi"
targets = []

[package.metadata.embassy_docs]
features = ["pac", "metadata"]
flavors = [
    { regex_feature = "py32f4.*", target = "thumbv7em-none-eabihf" },
    { regex_feature = "py32f0.*", target = "thumbv6m-none-eabi" },
    { regex_feature = "py32m.*", target = "thumbv6m-none-eabi" },
    { regex_feature = "py32l.*", target = "thumbv6m-none-eabi" },
    { regex_feature = "py32t.*", target = "thumbv6m-none-eabi" },
]

[dependencies]
cortex-m = "0.7.6"
cortex-m-rt = { version = ">=0.6.15,<0.8", optional = true }

[features]
default = ["pac"]

# Build the actual PAC. Set by default.
# If you just want the metadata, unset it with `default-features = false`.
pac = []

# Build the chip metadata.
# If set, a const `py32_metapac::METADATA` will be exported, containing all the
# metadata for the currently selected chip.
metadata = []

rt = ["cortex-m-rt/device"]
memory-x = []

# Chip-selection features
py32f002a = []
py32f002b = []
py32f003f14 = []
py32f003f16 = []
py32f003f17 = []
py32f003f18 = []
py32f003f26 = []
py32f003f36 = []
py32f003f48 = []
py32f003f56 = []
py32f003f68 = []
py32f003l16 = []
py32f003l18 = []
py32f003l24 = []
py32f003l26 = []
py32f003l28 = []
py32f003w16 = []
py32f003w18 = []
py32f030e18 = []
py32f030e26 = []
py32f030f16 = []
py32f030f17 = []
py32f030f18 = []
py32f030f26 = []
py32f030f27 = []
py32f030f28 = []
py32f030f36 = []
py32f030f38 = []
py32f030f46 = []
py32f030k14 = []
py32f030k16 = []
py32f030k17 = []
py32f030k18 = []
py32f030k24 = []
py32f030k26 = []
py32f030k27 = []
py32f030k28 = []
py32f030k38 = []
py32f030k46 = []
py32f030k48 = []
py32f030l14 = []
py32f030l16 = []
py32f031c18 = []
py32f031h18 = []
py32f031k18 = []
py32f040c16 = []
py32f040c18 = []
py32f040c1b = []
py32f040k1b = []
py32f040k2b = []
py32f040r1b = []
py32f071c1b = []
py32f071k18 = []
py32f071k1b = []
py32f071r1b = []
py32f072c1b = []
py32f072k1b = []
py32f072r1b = []
py32f403c1b = []
py32f403c1c = []
py32f403c1d = []
py32f403c2d = []
py32f403k1b = []
py32f403k1c = []
py32f403r1c = []
py32f403r1d = []
py32f403r2d = []
py32f403v1d = []
py32l020f15 = []
py32l020l15 = []
py32m010a15 = []
py32m010a25 = []
py32m020f16 = []
py32m030e18 = []
py32m031e18 = []
py32m070e1b = []
py32m070k1b = []
py32md310k18 = []
py32md320k18 = []
py32md410k18 = []
py32md420k18 = []
py32t020g16 = []
py32t020w16 = []
